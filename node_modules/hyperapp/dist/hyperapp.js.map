{"version":3,"sources":["../src/index.js"],"names":["app","props","container","vnode","element","map","h","tagName","toLowerCase","call","childNodes","nodeType","nodeValue","set","to","from","i","merge","setDeep","path","value","length","slice","get","isFunction","any","init","state","actions","key","action","data","appState","then","repaint","concat","getKey","node","setElementProp","name","oldValue","style","_","removeAttribute","setAttribute","createElement","isSVG","document","createTextNode","type","createElementNS","oncreate","lifecycle","push","children","appendChild","updateElement","oldProps","onupdate","removeElement","parent","done","removeChild","onremove","patch","oldNode","nextSibling","insertBefore","len","oldLen","oldKeyed","oldElements","keyed","oldElement","oldChild","oldKey","j","newChild","newKey","keyedNode","reusableNode","render","next","lock","view","appActions","root","pop","setTimeout","body","stack","arguments","Array","isArray"],"mappings":"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","file":"hyperapp.js","sourcesContent":["export function app(props, container) {\n  var lock\n  var root = (container = container || document.body).children[0]\n  var node = vnode(root, [].map)\n  var lifecycle = []\n  var appState = props.state || {}\n  var appActions = {}\n\n  repaint(init(appState, appActions, props.actions, []))\n\n  return appActions\n\n  function vnode(element, map) {\n    return (\n      element &&\n      h(\n        element.tagName.toLowerCase(),\n        {},\n        map.call(element.childNodes, function(element) {\n          return element.nodeType === 3\n            ? element.nodeValue\n            : vnode(element, map)\n        })\n      )\n    )\n  }\n\n  function set(to, from) {\n    for (var i in from) {\n      to[i] = from[i]\n    }\n    return to\n  }\n\n  function merge(to, from) {\n    return set(set({}, to), from)\n  }\n\n  function setDeep(path, value, from) {\n    var to = {}\n    return 0 === path.length\n      ? value\n      : ((to[path[0]] =\n          1 < path.length\n            ? setDeep(path.slice(1), value, from[path[0]])\n            : value),\n        merge(from, to))\n  }\n\n  function get(path, from) {\n    for (var i = 0; i < path.length; i++) {\n      from = from[path[i]]\n    }\n    return from\n  }\n\n  function isFunction(any) {\n    return \"function\" === typeof any\n  }\n\n  function init(state, actions, from, path) {\n    for (var key in from) {\n      isFunction(from[key])\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              state = get(path, appState)\n\n              if (\n                isFunction((data = action(data))) &&\n                isFunction((data = data(state)))\n              ) {\n                data = data(actions)\n              }\n\n              if (data && data !== state && !data.then) {\n                repaint(\n                  (appState = setDeep(path, merge(state, data), appState))\n                )\n              }\n\n              return data\n            }\n          })(key, from[key])\n        : init(\n            state[key] || (state[key] = {}),\n            (actions[key] = {}),\n            from[key],\n            path.concat(key)\n          )\n    }\n  }\n\n  function getKey(node) {\n    if (node && node.props) {\n      return node.props.key\n    }\n  }\n\n  function setElementProp(element, name, value, oldValue) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var i in merge(oldValue, (value = value || {}))) {\n        element.style[i] = null == value[i] ? \"\" : value[i]\n      }\n    } else {\n      try {\n        element[name] = null == value ? \"\" : value\n      } catch (_) {}\n\n      if (!isFunction(value)) {\n        if (null == value || false === value) {\n          element.removeAttribute(name)\n        } else {\n          element.setAttribute(name, value)\n        }\n      }\n    }\n  }\n\n  function createElement(node, isSVG) {\n    if (typeof node === \"string\") {\n      var element = document.createTextNode(node)\n    } else {\n      var element = (isSVG = isSVG || node.type === \"svg\")\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.type)\n        : document.createElement(node.type)\n\n      if (node.props.oncreate) {\n        lifecycle.push(function() {\n          node.props.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(createElement(node.children[i], isSVG))\n      }\n\n      for (var i in node.props) {\n        setElementProp(element, i, node.props[i])\n      }\n    }\n    return element\n  }\n\n  function updateElement(element, oldProps, props) {\n    for (var i in merge(oldProps, props)) {\n      var value = props[i]\n      var oldValue = i === \"value\" || i === \"checked\" ? element[i] : oldProps[i]\n\n      if (value !== oldValue) {\n        setElementProp(element, i, value, oldValue)\n      }\n    }\n\n    if (props.onupdate) {\n      lifecycle.push(function() {\n        props.onupdate(element, oldProps)\n      })\n    }\n  }\n\n  function removeElement(parent, element, props) {\n    function done() {\n      parent.removeChild(element)\n    }\n\n    if (props && props.onremove) {\n      props.onremove(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSVG, nextSibling) {\n    if (oldNode === node) {\n    } else if (null == oldNode) {\n      element = parent.insertBefore(createElement(node, isSVG), element)\n    } else if (node.type != null && node.type === oldNode.type) {\n      updateElement(element, oldNode.props, node.props)\n\n      isSVG = isSVG || node.type === \"svg\"\n\n      var len = node.children.length\n      var oldLen = oldNode.children.length\n      var oldKeyed = {}\n      var oldElements = []\n      var keyed = {}\n\n      for (var i = 0; i < oldLen; i++) {\n        var oldElement = (oldElements[i] = element.childNodes[i])\n        var oldChild = oldNode.children[i]\n        var oldKey = getKey(oldChild)\n\n        if (null != oldKey) {\n          oldKeyed[oldKey] = [oldElement, oldChild]\n        }\n      }\n\n      var i = 0\n      var j = 0\n\n      while (j < len) {\n        var oldElement = oldElements[i]\n        var oldChild = oldNode.children[i]\n        var newChild = node.children[j]\n\n        var oldKey = getKey(oldChild)\n        if (keyed[oldKey]) {\n          i++\n          continue\n        }\n\n        var newKey = getKey(newChild)\n        var keyedNode = oldKeyed[newKey] || []\n\n        if (null == newKey) {\n          if (null == oldKey) {\n            patch(element, oldElement, oldChild, newChild, isSVG)\n            j++\n          }\n          i++\n        } else {\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], newChild, isSVG)\n            i++\n          } else if (keyedNode[0]) {\n            element.insertBefore(keyedNode[0], oldElement)\n            patch(element, keyedNode[0], keyedNode[1], newChild, isSVG)\n          } else {\n            patch(element, oldElement, null, newChild, isSVG)\n          }\n\n          j++\n          keyed[newKey] = newChild\n        }\n      }\n\n      while (i < oldLen) {\n        var oldChild = oldNode.children[i]\n        var oldKey = getKey(oldChild)\n        if (null == oldKey) {\n          removeElement(element, oldElements[i], oldChild.props)\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        var keyedNode = oldKeyed[i]\n        var reusableNode = keyedNode[1]\n        if (!keyed[reusableNode.props.key]) {\n          removeElement(element, keyedNode[0], reusableNode.props)\n        }\n      }\n    } else if (element && node !== element.nodeValue) {\n      if (typeof node === \"string\" && typeof oldNode === \"string\") {\n        element.nodeValue = node\n      } else {\n        element = parent.insertBefore(\n          createElement(node, isSVG),\n          (nextSibling = element)\n        )\n        removeElement(parent, nextSibling, oldNode.props)\n      }\n    }\n\n    return element\n  }\n\n  function render(next) {\n    lock = !lock\n\n    if (isFunction((next = props.view(appState)))) {\n      next = next(appActions)\n    }\n\n    if (!lock) {\n      root = patch(container, root, node, (node = next))\n    }\n\n    while ((next = lifecycle.pop())) next()\n  }\n\n  function repaint() {\n    if (props.view && !lock) {\n      setTimeout(render, (lock = !lock))\n    }\n  }\n}\n\nexport function h(type, props) {\n  var node\n  var stack = []\n  var children = []\n\n  for (var i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n\n  while (stack.length) {\n    if (Array.isArray((node = stack.pop()))) {\n      for (i = node.length; i--; ) {\n        stack.push(node[i])\n      }\n    } else if (null == node || node === true || node === false) {\n    } else {\n      children.push(typeof node === \"number\" ? (node = node + \"\") : node)\n    }\n  }\n\n  return typeof type === \"string\"\n    ? {\n        type: type,\n        props: props || {},\n        children: children\n      }\n    : type(props || {}, children)\n}\n"]}